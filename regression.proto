syntax = "proto3";

package linear_regression;

option go_package = "github.com/ashagraev/linear_regression";

// Instance stores the information about one training example.
message Instance {
  // Argument stores the value of independent value.
  double Argument = 1;

  // Target stores the value of response value.
  double Target = 2;

  // Weight stores the importance of the training example.
  double Weight = 3;
}

message SimpleRegressionModel {
  string Name = 1;
  double Coefficient = 2;
  double Intercept = 3;
}

message TrainingResults {
  SimpleRegressionModel Model = 1;
  double SumSquaredErrors = 2;
  string Name = 3;
  string Error = 4;
  string CreationTime = 5;
}

message ModelValue {
  double Value = 1;
  double Argument = 2;

  SimpleRegressionModel Model = 3;

  bool FromCache = 4;

  string CalculationTime = 5;

  string Error = 6;
}

message TrainingRequest {
  repeated Instance Instances = 1;
  bool StoreModel = 2;
}

message CalculateRequest {
  string ModelName = 1;
  double Argument = 2;
}

message StatsRequest {
}

message ServerStats {
  int32 SucceededRequests = 1;
  int32 TotalRequests = 2;
  int32 TotalInstances = 3;
}

service Regression {
  rpc Train(TrainingRequest) returns (TrainingResults) {}
  rpc Calculate(CalculateRequest) returns (ModelValue) {}
  rpc Stats(StatsRequest) returns (ServerStats) {}
}
